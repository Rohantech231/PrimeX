"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/emotion-detection.ts":
/*!**********************************!*\
  !*** ./lib/emotion-detection.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectEmotions: function() { return /* binding */ detectEmotions; }\n/* harmony export */ });\n/* harmony import */ var _huggingface_inference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @huggingface/inference */ \"(app-pages-browser)/./node_modules/@huggingface/inference/dist/index.js\");\n\nconst hf = new _huggingface_inference__WEBPACK_IMPORTED_MODULE_0__.HfInference(\"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\");\nconst MODEL_ID = \"dima806/facial_emotions_image_detection\";\nasync function detectEmotions(video) {\n    try {\n        const imageBlob = await captureImageFromVideo(video);\n        const formData = new FormData();\n        formData.append(\"image\", imageBlob);\n        const response = await fetch(\"https://api-inference.huggingface.co/models/\".concat(MODEL_ID), {\n            headers: {\n                Authorization: \"Bearer \".concat(\"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\")\n            },\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            throw new Error(\"API error: \".concat(response.statusText));\n        }\n        const predictions = await response.json();\n        const emotions = {\n            happiness: 0,\n            sadness: 0,\n            anger: 0,\n            timestamp: Date.now()\n        };\n        predictions.forEach((prediction)=>{\n            const label = prediction.label.toLowerCase();\n            if (label in emotions) {\n                emotions[label] = prediction.score;\n            }\n        });\n        return emotions;\n    } catch (error) {\n        console.error(\"Error detecting emotions:\", error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9lbW90aW9uLWRldGVjdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUVyRCxNQUFNQyxLQUFLLElBQUlELCtEQUFXQSxDQUFDRSx1Q0FBMkM7QUFDdEUsTUFBTUcsV0FBVztBQVNWLGVBQWVDLGVBQWVDLEtBQXVCO0lBQzFELElBQUk7UUFDRixNQUFNQyxZQUFZLE1BQU1DLHNCQUFzQkY7UUFFOUMsTUFBTUcsV0FBVyxJQUFJQztRQUNyQkQsU0FBU0UsTUFBTSxDQUFDLFNBQVNKO1FBRXpCLE1BQU1LLFdBQVcsTUFBTUMsTUFDckIsK0NBQXdELE9BQVRULFdBQy9DO1lBQ0VVLFNBQVM7Z0JBQ1BDLGVBQWUsVUFBc0QsT0FBNUNkLHVDQUEyQztZQUN0RTtZQUNBZSxRQUFRO1lBQ1JDLE1BQU1SO1FBQ1I7UUFHRixJQUFJLENBQUNHLFNBQVNNLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU0sY0FBa0MsT0FBcEJQLFNBQVNRLFVBQVU7UUFDbkQ7UUFFQSxNQUFNQyxjQUFjLE1BQU1ULFNBQVNVLElBQUk7UUFFdkMsTUFBTUMsV0FBd0I7WUFDNUJDLFdBQVc7WUFDWEMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFdBQVdDLEtBQUtDLEdBQUc7UUFDckI7UUFFQVIsWUFBWVMsT0FBTyxDQUFDLENBQUNDO1lBQ25CLE1BQU1DLFFBQVFELFdBQVdDLEtBQUssQ0FBQ0MsV0FBVztZQUMxQyxJQUFJRCxTQUFTVCxVQUFVO2dCQUNyQkEsUUFBUSxDQUFDUyxNQUErQixHQUFHRCxXQUFXRyxLQUFLO1lBQzdEO1FBQ0Y7UUFFQSxPQUFPWDtJQUNULEVBQUUsT0FBT1ksT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxPQUFPO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZW1vdGlvbi1kZXRlY3Rpb24udHM/NGI0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZkluZmVyZW5jZSB9IGZyb20gJ0BodWdnaW5nZmFjZS9pbmZlcmVuY2UnO1xuXG5jb25zdCBoZiA9IG5ldyBIZkluZmVyZW5jZShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19IVUdHSU5HRkFDRV9BUElfS0VZKTtcbmNvbnN0IE1PREVMX0lEID0gJ2RpbWE4MDYvZmFjaWFsX2Vtb3Rpb25zX2ltYWdlX2RldGVjdGlvbic7XG5cbmV4cG9ydCB0eXBlIEVtb3Rpb25EYXRhID0ge1xuICBoYXBwaW5lc3M6IG51bWJlcjtcbiAgc2FkbmVzczogbnVtYmVyO1xuICBhbmdlcjogbnVtYmVyO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbn07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZXRlY3RFbW90aW9ucyh2aWRlbzogSFRNTFZpZGVvRWxlbWVudCk6IFByb21pc2U8RW1vdGlvbkRhdGEgfCBudWxsPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgaW1hZ2VCbG9iID0gYXdhaXQgY2FwdHVyZUltYWdlRnJvbVZpZGVvKHZpZGVvKTtcbiAgICBcbiAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgIGZvcm1EYXRhLmFwcGVuZCgnaW1hZ2UnLCBpbWFnZUJsb2IpO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgIGBodHRwczovL2FwaS1pbmZlcmVuY2UuaHVnZ2luZ2ZhY2UuY28vbW9kZWxzLyR7TU9ERUxfSUR9YCxcbiAgICAgIHtcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19IVUdHSU5HRkFDRV9BUElfS0VZfWAsXG4gICAgICAgIH0sXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBib2R5OiBmb3JtRGF0YSxcbiAgICAgIH1cbiAgICApO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBBUEkgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcbiAgICB9XG5cbiAgICBjb25zdCBwcmVkaWN0aW9ucyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgIGNvbnN0IGVtb3Rpb25zOiBFbW90aW9uRGF0YSA9IHtcbiAgICAgIGhhcHBpbmVzczogMCxcbiAgICAgIHNhZG5lc3M6IDAsXG4gICAgICBhbmdlcjogMCxcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICB9O1xuXG4gICAgcHJlZGljdGlvbnMuZm9yRWFjaCgocHJlZGljdGlvbjogYW55KSA9PiB7XG4gICAgICBjb25zdCBsYWJlbCA9IHByZWRpY3Rpb24ubGFiZWwudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChsYWJlbCBpbiBlbW90aW9ucykge1xuICAgICAgICBlbW90aW9uc1tsYWJlbCBhcyBrZXlvZiB0eXBlb2YgZW1vdGlvbnNdID0gcHJlZGljdGlvbi5zY29yZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBlbW90aW9ucztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZXRlY3RpbmcgZW1vdGlvbnM6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59Il0sIm5hbWVzIjpbIkhmSW5mZXJlbmNlIiwiaGYiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfSFVHR0lOR0ZBQ0VfQVBJX0tFWSIsIk1PREVMX0lEIiwiZGV0ZWN0RW1vdGlvbnMiLCJ2aWRlbyIsImltYWdlQmxvYiIsImNhcHR1cmVJbWFnZUZyb21WaWRlbyIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJtZXRob2QiLCJib2R5Iiwib2siLCJFcnJvciIsInN0YXR1c1RleHQiLCJwcmVkaWN0aW9ucyIsImpzb24iLCJlbW90aW9ucyIsImhhcHBpbmVzcyIsInNhZG5lc3MiLCJhbmdlciIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJmb3JFYWNoIiwicHJlZGljdGlvbiIsImxhYmVsIiwidG9Mb3dlckNhc2UiLCJzY29yZSIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/emotion-detection.ts\n"));

/***/ })

});